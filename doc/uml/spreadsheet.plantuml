@startuml

class Observable {
-changed: bool
+notifObservers(msg: Object)
+setChanged()
}

interface Observer {
+{abstract} update(subject: Observer, msg: Object)
}

Observable -> "*" Observer : observers

class SpreadSheetCell {
-formulae: string
-evaluatedFormulae: double
+setFormulae(formulae: string)
+setEvaluatedFormulae(val: double)
+getEvaluatedFormulae(): double
+addReference(SpreadSheetCell*)
}

Observable <|-- SpreadSheetCell
Observer <|.. SpreadSheetCell
SpreadSheetCell --> "*" SpreadSheetCell : references

abstract class SpreadSheet {
+evaluateBy(interpreter: SimForth)
#{abstract} resetCellIterator()
#{abstract} hasCell() : bool
#{abstract} nextCell() : SpreadSheetCell*
#{abstract} howManyCell() : int
}

class ClassicSpreadSheet {
+rows: int
+cols: int
-cells: SpreadSheetCell[][]
}

class SimForth {
+interpreteSheet(sheet: SpreadSheet)
+interpreteCell(cell: SpreadSheetCell)
+interpreteString(formulae: string)
}

' SimTaDyn -> "*" SimMap
' SimMap -> "1" SpreadSheet
SpreadSheet -> "*" SpreadSheetCell : cells
SpreadSheet <|-- ClassicSpreadSheet
SpreadSheetCell <.. SimForth : "interpretes"
SpreadSheet ..> SimForth : "uses"

@enduml
